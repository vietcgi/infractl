apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/component: controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/component: controller
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update"]
- apiGroups: ["bitnami.com"]
  resources: ["sealedsecrets"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["bitnami.com"]
  resources: ["sealedsecrets/status"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets
subjects:
- kind: ServiceAccount
  name: sealed-secrets
  namespace: kube-system
---
# Minimal RBAC for sealing secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets-sealer
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/component: sealer
rules:
- apiGroups: ["bitnami.com"]
  resources: ["sealedsecrets"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets-sealer
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/component: sealer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets-sealer
subjects:
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
