# Default values for Grafana
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Security context
securityContext:
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Pod security context
podSecurityContext:
  fsGroup: 472
  runAsUser: 472
  runAsGroup: 472
  runAsNonRoot: true

# Grafana configuration
grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
    level: info
  server:
    http_port: 3000
    domain: localhost
    root_url: %(protocol)s://%(domain)s/
    serve_from_sub_path: false
    enable_gzip: true
  database:
    type: sqlite3
  security:
    admin_user: admin
    admin_password: admin  # Should be overridden in production
    secret_key: ""  # Auto-generated if empty
    disable_initial_admin_creation: false
    disable_gravatar: true
    cookie_secure: true
    cookie_samesite: lax
    strict_transport_security: true
    strict_transport_security_max_age_seconds: 31536000
    strict_transport_security_preload: true
    strict_transport_security_subdomains: true
    x_frame_options: deny
    x_content_type_options: true
    x_xss_protection: true
  users:
    allow_sign_up: false
    auto_assign_org: true
    auto_assign_org_role: Viewer
    verify_email_enabled: true
  auth:
    disable_login_form: false
    disable_signout_menu: false
    oauth_auto_login: false
    signout_redirect_url: /login
  auth.anonymous:
    enabled: false
  auth.basic:
    enabled: false
  auth.ldap:
    enabled: false
  auth.proxy:
    enabled: false
  auth.github:
    enabled: false
  auth.gitlab:
    enabled: false
  auth.google:
    enabled: false
  auth.generic_oauth:
    enabled: false
  auth.okta:
    enabled: false
  auth.proxy:
    enabled: false
  auth.saml:
    enabled: false
  smtp:
    enabled: false
  unified_alerting:
    enabled: true

# Persistence
persistence:
  type: pvc
  enabled: true
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  finalizers:
    - kubernetes.io/pvc-protection

# Resources
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

affinity: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Ingress configuration
ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 3000
  annotations: {}

# Service monitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  namespace: monitoring
  additionalLabels: {}
  annotations: {}
  path: /metrics
  scheme: http
  tlsConfig: {}

# Dashboards configuration
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

# Datasources configuration
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.monitoring.svc.cluster.local:9090
        access: proxy
        isDefault: true
        editable: true

# Plugins
plugins: []

# Sidecar for dashboards
dashboards:
  default:
    # Disable default dashboards
    enabled: false

# Extra environment variables
extraEnvVars: {}

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Extra containers
extraContainers: []

# Extra init containers
extraInitContainers: []

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Liveness probe
livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10
  periodSeconds: 10

# Readiness probe
readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 5
  timeoutSeconds: 3
  periodSeconds: 5
  failureThreshold: 3

# Startup probe
startupProbe:
  httpGet:
    path: /api/health
    port: 3000
  failureThreshold: 30
  periodSeconds: 10
