# Default values for Prometheus
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Alertmanager configuration
alertmanager:
  enabled: true
  podSecurityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 2000
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

# Prometheus server configuration
server:
  podSecurityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 2000
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  persistentVolume:
    enabled: true
    size: 50Gi
    storageClass: longhorn
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 8Gi
  retention: 15d
  retentionSize: "30GB"
  statefulSet:
    enabled: true

# Node exporter configuration
nodeExporter:
  enabled: true
  hostRootfs: false
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 2000
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
      add: ["NET_RAW", "NET_ADMIN"]
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Kube-state-metrics configuration
kubeStateMetrics:
  enabled: true
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 2000
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi

# Pushgateway configuration
pushgateway:
  enabled: false

# Service accounts and RBAC
serviceAccounts:
  alertmanager:
    create: true
    name: prometheus-alertmanager
  nodeExporter:
    create: true
    name: prometheus-node-exporter
  server:
    create: true
    name: prometheus-server
  kubeStateMetrics:
    create: true
    name: kube-state-metrics

# Service monitors
serviceMonitor:
  enabled: true
  interval: 30s
  selfMonitor: true
  namespace: monitoring
  namespaceSelector:
    matchNames:
      - monitoring
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus

# Pod security policies
podSecurityPolicy:
  enabled: false

# Network policies
networkPolicy:
  enabled: true
  allowEgress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 169.254.169.254/32
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

# Additional scrape configs
additionalScrapeConfigs: {}

# Alerting rules
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - "alertmanager.monitoring.svc:9093"
  alertmanagerSpec:
    podMetadata:
      labels:
        app.kubernetes.io/name: alertmanager
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    resources:
      requests:
        memory: 400Mi
      limits:
        memory: 1Gi

# Rule files
serverFiles:
  alerts: {}
  rules: {}
  prometheus.yml:
    rule_files:
      - /etc/config/rules/*.yaml
      - /etc/config/rules/*.yml

# Storage configuration
volumePermissions:
  enabled: true
  securityContext:
    runAsUser: 0

# Service configuration
service:
  type: ClusterIP
  port: 9090
  targetPort: 9090
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls: []
